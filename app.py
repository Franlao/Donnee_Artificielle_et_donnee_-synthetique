import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
import io
import base64
from PIL import Image
import sys
import os
import torch
if hasattr(torch, "classes"):
    del torch.classes
    
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'

# Configuration de la page - DOIT √äTRE LA PREMI√àRE COMMANDE STREAMLIT
st.set_page_config(
    page_title="D√©mo - Donn√©es Synth√©tiques en Sant√©",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# IMPORTANT: Initialize session state variables at the beginning
if 'variables' not in st.session_state:
    st.session_state.variables = {}
    
if 'correlations' not in st.session_state:
    st.session_state.correlations = {}
    
if 'artificial_data' not in st.session_state:
    st.session_state.artificial_data = None
    
if 'real_data' not in st.session_state:
    st.session_state.real_data = None
    
if 'synthetic_data' not in st.session_state:
    st.session_state.synthetic_data = None

# Titre principal
st.title("D√©monstration - Donn√©es Synth√©tiques et Artificielles en Sant√©")

# Cr√©ation du package AI_Methods
# Assurez-vous que le r√©pertoire existe
os.makedirs("AI_Methods", exist_ok=True)

# Importer les fonctions depuis demo_app.py
from Avec_AI.demo_app import (
    generate_artificial_data,
    generate_synthetic_data_bootstrap,
    generate_synthetic_data_gaussian_copula,
    compare_distributions,
    plot_numeric_comparison,
    plot_categorical_comparison,
    plot_correlation_comparison,
    plot_pca_comparison,
    render_dynamic_artificial_data_tab,
    render_synthetic_data_tab
)

# Importer la fonction render_ai_methods_tab depuis le package AI_Methods
from Avec_AI.AI_Method import render_ai_methods_tab

# Cr√©er les onglets
tab1, tab2, tab3 = st.tabs(["Donn√©es Artificielles", "Donn√©es Synth√©tiques", "M√©thodes d'IA"])

# Remplir chaque onglet avec le contenu correspondant
with tab1:
    render_dynamic_artificial_data_tab()

with tab2:
    render_synthetic_data_tab()

with tab3:
    render_ai_methods_tab()

# Instructions d'utilisation dans la barre lat√©rale
with st.sidebar:
    st.title("Guide d'utilisation")
    
    st.markdown("""
    ### Donn√©es Artificielles
    
    Utilisez cet onglet pour g√©n√©rer des donn√©es √† partir de distributions statistiques que vous d√©finissez.
    
    1. D√©finissez les param√®tres pour chaque variable
    2. Sp√©cifiez les corr√©lations entre variables num√©riques
    3. Cliquez sur "G√©n√©rer les Donn√©es Artificielles"
    4. Explorez les visualisations et t√©l√©chargez les donn√©es
    
    ### Donn√©es Synth√©tiques
    
    Utilisez cet onglet pour g√©n√©rer des donn√©es synth√©tiques bas√©es sur des donn√©es r√©elles.
    
    1. Chargez un fichier CSV contenant vos donn√©es r√©elles
    2. S√©lectionnez les colonnes √† inclure
    3. Choisissez la m√©thode de g√©n√©ration
    4. Cliquez sur "G√©n√©rer les Donn√©es Synth√©tiques"
    5. Comparez les distributions et t√©l√©chargez les donn√©es
    
    ### M√©thodes d'IA
    
    Utilisez cet onglet pour explorer les approches avanc√©es bas√©es sur l'intelligence artificielle.
    
    #### IA pour Donn√©es Synth√©tiques:
    - GAN: R√©seaux antagonistes g√©n√©ratifs
    - VAE: Auto-encodeurs variationnels
    
    #### IA pour Donn√©es Artificielles:
    - LLM: Grands mod√®les de langage (via API Mistral)
    """)
    
    st.markdown("---")
    
    st.markdown("""
    ### Pr√©par√© pour:
    **Pr√©sentation d'√âpid√©miologie**
    
    *Donn√©es synth√©tiques et donn√©es artificielles en sant√©*
    """)
    
    # Section Installation et Pr√©requis
    with st.expander("Installation et Pr√©requis"):
        st.markdown("""
        ### Pr√©requis

        Cette application n√©cessite les biblioth√®ques Python suivantes:

        ```bash
        pip install streamlit pandas numpy matplotlib seaborn scipy scikit-learn
        ```

        Pour les fonctionnalit√©s d'IA:

        ```bash
        pip install tensorflow mistralai
        ```

        ### Structure des fichiers

        Pour ex√©cuter cette application, assurez-vous d'avoir les fichiers suivants:
        - `app.py` (ce fichier principal)
        - `demo_app.py` (fonctionnalit√©s de base)
        - Package `AI_Methods` (fonctionnalit√©s d'IA)

        ### Lancement

        ```bash
        streamlit run app.py
        ```
        """)